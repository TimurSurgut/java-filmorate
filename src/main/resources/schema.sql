DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS genre_film CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS rating
(
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film
(
    film_id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name                VARCHAR NOT NULL,
    description         VARCHAR(200),
    release_date        DATE,
    duration INTEGER CHECK (duration > 0),
    rating_id       INTEGER REFERENCES rating (rating_id)
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genre_film
(
genre_id INTEGER NOT NULL REFERENCES genre (genre_id),
film_id  BIGINT  NOT NULL REFERENCES film (film_id)
    
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR NOT NULL UNIQUE,
    login    VARCHAR NOT NULL UNIQUE,
    user_name     VARCHAR NOT NULL,
    birthday DATE    NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id BIGINT  NOT NULL REFERENCES users (user_id),
    friend_id   BIGINT  NOT NULL REFERENCES users (user_id),
    status_request     BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id BIGINT NOT NULL REFERENCES film (film_id),
    user_id BIGINT NOT NULL REFERENCES users (user_id)
);





